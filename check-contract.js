const fs = require('fs');
const path = require('path');

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Solidity
function checkContract() {
    try {
        const contractPath = path.join(__dirname, 'contracts', 'GiftCard.sol');
        const contractContent = fs.readFileSync(contractPath, 'utf8');
        
        console.log('‚úÖ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        console.log(`üìÑ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${contractContent.length} —Å–∏–º–≤–æ–ª–æ–≤`);
        console.log(`üìù –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: ${contractContent.split('\n').length}`);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        const checks = [
            { name: 'SPDX License', pattern: /SPDX-License-Identifier/ },
            { name: 'Pragma', pattern: /pragma solidity/ },
            { name: 'Contract declaration', pattern: /contract GiftCard/ },
            { name: 'Constructor', pattern: /constructor/ },
            { name: 'createGiftCard function', pattern: /function createGiftCard/ },
            { name: 'redeemGiftCard function', pattern: /function redeemGiftCard/ },
            { name: 'Events', pattern: /event GiftCard/ },
            { name: 'Override functions', pattern: /override/ }
        ];
        
        console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
        checks.forEach(check => {
            const found = check.pattern.test(contractContent);
            console.log(`${found ? '‚úÖ' : '‚ùå'} ${check.name}`);
        });
        
        console.log('\nüìã –û—Å–Ω–æ–≤–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ —Å–¥–µ–ª–∞–Ω—ã:');
        console.log('1. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä Ownable(msg.sender)');
        console.log('2. ‚úÖ –ó–∞–º–µ–Ω–µ–Ω—ã —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ _beforeTokenTransfer –Ω–∞ _update');
        console.log('3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è _increaseBalance');
        console.log('4. ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã override —Å–ø–∏—Å–∫–∏');
        console.log('5. ‚úÖ –£–¥–∞–ª–µ–Ω–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è _burn');
        
        console.log('\nüéâ –ö–æ–Ω—Ç—Ä–∞–∫—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞:', error.message);
    }
}

checkContract();
